name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build backend Docker image
        run: docker build -t backend:latest ./backend

      - name: Build frontend Docker image
        run: docker build -t frontend:latest ./frontend

      - name: Run backend tests
        run: |
          cd backend
          npm install
          npm test

      - name: Run frontend tests
        run: |
          cd frontend
          npm install
          npm test

      # Add lint steps if needed
      # - name: Lint backend
      #   run: cd backend && npm run lint

      # - name: Lint frontend
      #   run: cd frontend && npm run lint

  push-and-deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Login to your container registry
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push backend Docker image
        run: docker push ghcr.io/${{ github.repository }}/backend:latest

      - name: Push frontend Docker image
        run: docker push ghcr.io/${{ github.repository }}/frontend:latest

      # Deploy to Kubernetes (replace with your approach, e.g., Helm)
      - name: Deploy to Kubernetes
        run: |
          # Set up kubectl, KUBECONFIG, etc.
          kubectl apply -f k8s/backend-deployment.yaml
          kubectl apply -f k8s/frontend-deployment.yaml

      # Optional: Post-deployment checks
      - name: Check pod status
        run: kubectl get pods
